seagrass_data$C_SERRULAT <- as.factor( ifelse(seagrass_data$C_SERRULAT=="Yes", 1, 0) )
seagrass_data$H_SPINULOS <- as.factor( ifelse(seagrass_data$H_SPINULOS=="Yes", 1, 0) )
seagrass_data$T_HEMPRICH <- as.factor( ifelse(seagrass_data$T_HEMPRICH=="Yes", 1, 0) )
# rename misspelled column in original data set
names(seagrass_data)[names(seagrass_data) == "LATITUTDE"] <- "LATITUDE"
get_species_type <- function(C_SERRULAT, H_SPINULOS, T_HEMPRICH) {
if (C_SERRULAT==1) {
return(0)
} else if (H_SPINULOS==1) {
return(1)
} else if (T_HEMPRICH == 1) {
return(2)
}
}
seagrass_data$SPECIES <- mapply(get_species_type,
seagrass_data$C_SERRULAT,
seagrass_data$H_SPINULOS,
seagrass_data$T_HEMPRICH)
seagrass_data$SPECIES <- factor(seagrass_data$SPECIES,
# levels=c(0,1,2),
#labels=c("C_SERRULAT", "H_SPINULOS", "T_HEMPRICH"),
ordered=FALSE)
seagrass_data <- seagrass_data %>%
select(SPECIES, C_SERRULAT, H_SPINULOS, T_HEMPRICH, LATITUDE, LONGITUDE, DEPTH, SEDIMENT, TIDAL)
write.csv(seagrass_data, "cleaned_data/seagrass_classification_data.csv", row.names = FALSE)
View(seagrass_data)
levels(seagrass_data$SEDIMENT)
levels(seagrass_data$SPECIES)
seagrass_data <- read.csv("raw_data/GBR_NESP-TWQ-3.2.1-5.4_JCU_Seagrass_1984-2018_Site-surveys.csv") %>%
select(-FID, -SURVEY_MET, -SURVEY_NAM, -C_ROTUNDAT, -E_ACOROIDE, -H_CAPRICOR,
-H_TRICOSTA, -S_ISOETIFO, -T_CILIATUM, -H_OVALIS, -H_UNINERVI, -Z_CAPRICOR, -H_DECIPIEN) %>%
# subset data so we only return rows where no more than 1 of the 3 seagrass types were discovered
# only aboue 179 out of 4416 observations had more than 1 of the seagrass so very little loss of power
filter(SEDIMENT != "Not recorded" &
PRESENCE_A == "Present" &
(C_SERRULAT =="Yes" | H_SPINULOS=="Yes" | T_HEMPRICH=="Yes" ) &
!((C_SERRULAT == "Yes" & H_SPINULOS == "Yes") |
(C_SERRULAT == "Yes" & T_HEMPRICH == "Yes") |
(T_HEMPRICH == "Yes" & H_SPINULOS == "Yes") |
(C_SERRULAT == "Yes" & H_SPINULOS == "Yes" & T_HEMPRICH == "Yes")))  #%>%
# encode presence of seagrass species into zero or one
seagrass_data$C_SERRULAT <- as.factor( ifelse(seagrass_data$C_SERRULAT=="Yes", 1, 0) )
seagrass_data$H_SPINULOS <- as.factor( ifelse(seagrass_data$H_SPINULOS=="Yes", 1, 0) )
seagrass_data$T_HEMPRICH <- as.factor( ifelse(seagrass_data$T_HEMPRICH=="Yes", 1, 0) )
# rename misspelled column in original data set
names(seagrass_data)[names(seagrass_data) == "LATITUTDE"] <- "LATITUDE"
get_species_type <- function(C_SERRULAT, H_SPINULOS, T_HEMPRICH) {
if (C_SERRULAT==1) {
return(0)
} else if (H_SPINULOS==1) {
return(1)
} else if (T_HEMPRICH == 1) {
return(2)
}
}
seagrass_data$SPECIES <- mapply(get_species_type,
seagrass_data$C_SERRULAT,
seagrass_data$H_SPINULOS,
seagrass_data$T_HEMPRICH)
seagrass_data$SPECIES <- factor(seagrass_data$SPECIES,
levels=c(0,1,2),
#labels=c("C_SERRULAT", "H_SPINULOS", "T_HEMPRICH"),
ordered=FALSE)
seagrass_data <- seagrass_data %>%
select(SPECIES, C_SERRULAT, H_SPINULOS, T_HEMPRICH, LATITUDE, LONGITUDE, DEPTH, SEDIMENT, TIDAL)
write.csv(seagrass_data, "cleaned_data/seagrass_classification_data.csv", row.names = FALSE)
seagrass_data <- read.csv("raw_data/GBR_NESP-TWQ-3.2.1-5.4_JCU_Seagrass_1984-2018_Site-surveys.csv") %>%
select(-FID, -SURVEY_MET, -SURVEY_NAM, -C_ROTUNDAT, -E_ACOROIDE, -H_CAPRICOR,
-H_TRICOSTA, -S_ISOETIFO, -T_CILIATUM, -H_OVALIS, -H_UNINERVI, -Z_CAPRICOR, -H_DECIPIEN) %>%
# subset data so we only return rows where no more than 1 of the 3 seagrass types were discovered
# only aboue 179 out of 4416 observations had more than 1 of the seagrass so very little loss of power
filter(SEDIMENT != "Not recorded" &
PRESENCE_A == "Present" &
(C_SERRULAT =="Yes" | H_SPINULOS=="Yes" | T_HEMPRICH=="Yes" ) &
!((C_SERRULAT == "Yes" & H_SPINULOS == "Yes") |
(C_SERRULAT == "Yes" & T_HEMPRICH == "Yes") |
(T_HEMPRICH == "Yes" & H_SPINULOS == "Yes") |
(C_SERRULAT == "Yes" & H_SPINULOS == "Yes" & T_HEMPRICH == "Yes")))  #%>%
# encode presence of seagrass species into zero or one
seagrass_data$C_SERRULAT <- as.factor( ifelse(seagrass_data$C_SERRULAT=="Yes", 1, 0) )
seagrass_data$H_SPINULOS <- as.factor( ifelse(seagrass_data$H_SPINULOS=="Yes", 1, 0) )
seagrass_data$T_HEMPRICH <- as.factor( ifelse(seagrass_data$T_HEMPRICH=="Yes", 1, 0) )
# rename misspelled column in original data set
names(seagrass_data)[names(seagrass_data) == "LATITUTDE"] <- "LATITUDE"
get_species_type <- function(C_SERRULAT, H_SPINULOS, T_HEMPRICH) {
if (C_SERRULAT==1) {
return(0)
} else if (H_SPINULOS==1) {
return(1)
} else if (T_HEMPRICH == 1) {
return(2)
}
}
seagrass_data$SPECIES <- mapply(get_species_type,
seagrass_data$C_SERRULAT,
seagrass_data$H_SPINULOS,
seagrass_data$T_HEMPRICH)
seagrass_data$SPECIES <- factor(seagrass_data$SPECIES,
#levels=c(0,1,2),
levels=c("C_SERRULAT", "H_SPINULOS", "T_HEMPRICH"),
ordered=FALSE)
seagrass_data <- seagrass_data %>%
select(SPECIES, C_SERRULAT, H_SPINULOS, T_HEMPRICH, LATITUDE, LONGITUDE, DEPTH, SEDIMENT, TIDAL)
write.csv(seagrass_data, "cleaned_data/seagrass_classification_data.csv", row.names = FALSE)
View(seagrass_data)
seagrass_data <- read.csv("raw_data/GBR_NESP-TWQ-3.2.1-5.4_JCU_Seagrass_1984-2018_Site-surveys.csv") %>%
select(-FID, -SURVEY_MET, -SURVEY_NAM, -C_ROTUNDAT, -E_ACOROIDE, -H_CAPRICOR,
-H_TRICOSTA, -S_ISOETIFO, -T_CILIATUM, -H_OVALIS, -H_UNINERVI, -Z_CAPRICOR, -H_DECIPIEN) %>%
# subset data so we only return rows where no more than 1 of the 3 seagrass types were discovered
# only aboue 179 out of 4416 observations had more than 1 of the seagrass so very little loss of power
filter(SEDIMENT != "Not recorded" &
PRESENCE_A == "Present" &
(C_SERRULAT =="Yes" | H_SPINULOS=="Yes" | T_HEMPRICH=="Yes" ) &
!((C_SERRULAT == "Yes" & H_SPINULOS == "Yes") |
(C_SERRULAT == "Yes" & T_HEMPRICH == "Yes") |
(T_HEMPRICH == "Yes" & H_SPINULOS == "Yes") |
(C_SERRULAT == "Yes" & H_SPINULOS == "Yes" & T_HEMPRICH == "Yes")))  #%>%
# encode presence of seagrass species into zero or one
seagrass_data$C_SERRULAT <- as.factor( ifelse(seagrass_data$C_SERRULAT=="Yes", 1, 0) )
seagrass_data$H_SPINULOS <- as.factor( ifelse(seagrass_data$H_SPINULOS=="Yes", 1, 0) )
seagrass_data$T_HEMPRICH <- as.factor( ifelse(seagrass_data$T_HEMPRICH=="Yes", 1, 0) )
# rename misspelled column in original data set
names(seagrass_data)[names(seagrass_data) == "LATITUTDE"] <- "LATITUDE"
get_species_type <- function(C_SERRULAT, H_SPINULOS, T_HEMPRICH) {
if (C_SERRULAT==1) {
return(0)
} else if (H_SPINULOS==1) {
return(1)
} else if (T_HEMPRICH == 1) {
return(2)
}
}
seagrass_data$SPECIES <- mapply(get_species_type,
seagrass_data$C_SERRULAT,
seagrass_data$H_SPINULOS,
seagrass_data$T_HEMPRICH)
seagrass_data$SPECIES <- factor(seagrass_data$SPECIES,
#levels=c(0,1,2),
labels =c("C_SERRULAT", "H_SPINULOS", "T_HEMPRICH"),
ordered=FALSE)
seagrass_data <- seagrass_data %>%
select(SPECIES, C_SERRULAT, H_SPINULOS, T_HEMPRICH, LATITUDE, LONGITUDE, DEPTH, SEDIMENT, TIDAL)
write.csv(seagrass_data, "cleaned_data/seagrass_classification_data.csv", row.names = FALSE)
View(seagrass_data)
levels(seagrass_data$SPECIES)
labels(seagrass_data$SPECIES)
seagrass_data <- read.csv("raw_data/GBR_NESP-TWQ-3.2.1-5.4_JCU_Seagrass_1984-2018_Site-surveys.csv") %>%
select(-FID, -SURVEY_MET, -SURVEY_NAM, -C_ROTUNDAT, -E_ACOROIDE, -H_CAPRICOR,
-H_TRICOSTA, -S_ISOETIFO, -T_CILIATUM, -H_OVALIS, -H_UNINERVI, -Z_CAPRICOR, -H_DECIPIEN) %>%
# subset data so we only return rows where no more than 1 of the 3 seagrass types were discovered
# only aboue 179 out of 4416 observations had more than 1 of the seagrass so very little loss of power
filter(SEDIMENT != "Not recorded" &
PRESENCE_A == "Present" &
(C_SERRULAT =="Yes" | H_SPINULOS=="Yes" | T_HEMPRICH=="Yes" ) &
!((C_SERRULAT == "Yes" & H_SPINULOS == "Yes") |
(C_SERRULAT == "Yes" & T_HEMPRICH == "Yes") |
(T_HEMPRICH == "Yes" & H_SPINULOS == "Yes") |
(C_SERRULAT == "Yes" & H_SPINULOS == "Yes" & T_HEMPRICH == "Yes")))  #%>%
# encode presence of seagrass species into zero or one
seagrass_data$C_SERRULAT <- as.factor( ifelse(seagrass_data$C_SERRULAT=="Yes", 1, 0) )
seagrass_data$H_SPINULOS <- as.factor( ifelse(seagrass_data$H_SPINULOS=="Yes", 1, 0) )
seagrass_data$T_HEMPRICH <- as.factor( ifelse(seagrass_data$T_HEMPRICH=="Yes", 1, 0) )
# rename misspelled column in original data set
names(seagrass_data)[names(seagrass_data) == "LATITUTDE"] <- "LATITUDE"
get_species_type <- function(C_SERRULAT, H_SPINULOS, T_HEMPRICH) {
if (C_SERRULAT==1) {
return(0)
} else if (H_SPINULOS==1) {
return(1)
} else if (T_HEMPRICH == 1) {
return(2)
}
}
seagrass_data$SPECIES <- mapply(get_species_type,
seagrass_data$C_SERRULAT,
seagrass_data$H_SPINULOS,
seagrass_data$T_HEMPRICH)
seagrass_data$SPECIES <- factor(seagrass_data$SPECIES,
levels=c(0,1,2),
labels =c("C_SERRULAT", "H_SPINULOS", "T_HEMPRICH"),
ordered=FALSE)
seagrass_data <- seagrass_data %>%
select(SPECIES, C_SERRULAT, H_SPINULOS, T_HEMPRICH, LATITUDE, LONGITUDE, DEPTH, SEDIMENT, TIDAL)
write.csv(seagrass_data, "cleaned_data/seagrass_classification_data.csv", row.names = FALSE)
View(seagrass_data)
labels(seagrass_data$SPECIES)
levels(seagrass_data$SPECIES)
seagrass_data <- read.csv("raw_data/GBR_NESP-TWQ-3.2.1-5.4_JCU_Seagrass_1984-2018_Site-surveys.csv") %>%
select(-FID, -SURVEY_MET, -SURVEY_NAM, -C_ROTUNDAT, -E_ACOROIDE, -H_CAPRICOR,
-H_TRICOSTA, -S_ISOETIFO, -T_CILIATUM, -H_OVALIS, -H_UNINERVI, -Z_CAPRICOR, -H_DECIPIEN) %>%
# subset data so we only return rows where no more than 1 of the 3 seagrass types were discovered
# only aboue 179 out of 4416 observations had more than 1 of the seagrass so very little loss of power
filter(SEDIMENT != "Not recorded" &
PRESENCE_A == "Present" &
(C_SERRULAT =="Yes" | H_SPINULOS=="Yes" | T_HEMPRICH=="Yes" ) &
!((C_SERRULAT == "Yes" & H_SPINULOS == "Yes") |
(C_SERRULAT == "Yes" & T_HEMPRICH == "Yes") |
(T_HEMPRICH == "Yes" & H_SPINULOS == "Yes") |
(C_SERRULAT == "Yes" & H_SPINULOS == "Yes" & T_HEMPRICH == "Yes")))  #%>%
# encode presence of seagrass species into zero or one
seagrass_data$C_SERRULAT <- as.factor( ifelse(seagrass_data$C_SERRULAT=="Yes", 1, 0) )
seagrass_data$H_SPINULOS <- as.factor( ifelse(seagrass_data$H_SPINULOS=="Yes", 1, 0) )
seagrass_data$T_HEMPRICH <- as.factor( ifelse(seagrass_data$T_HEMPRICH=="Yes", 1, 0) )
# rename misspelled column in original data set
names(seagrass_data)[names(seagrass_data) == "LATITUTDE"] <- "LATITUDE"
get_species_type <- function(C_SERRULAT, H_SPINULOS, T_HEMPRICH) {
if (C_SERRULAT==1) {
return("C_SERRULAT")
} else if (H_SPINULOS==1) {
return("H_SPINULOS")
} else if (T_HEMPRICH == 1) {
return("T_HEMPRICH")
}
}
seagrass_data$SPECIES <- mapply(get_species_type,
seagrass_data$C_SERRULAT,
seagrass_data$H_SPINULOS,
seagrass_data$T_HEMPRICH)
seagrass_data$SPECIES <- factor(seagrass_data$SPECIES, ordered=FALSE)
seagrass_data <- seagrass_data %>%
select(SPECIES, C_SERRULAT, H_SPINULOS, T_HEMPRICH, LATITUDE, LONGITUDE, DEPTH, SEDIMENT, TIDAL)
write.csv(seagrass_data, "cleaned_data/seagrass_classification_data.csv", row.names = FALSE)
View(seagrass_data)
seagrass <- read.csv("cleaned_data/seagrass_classification_data.csv", as.is =TRUE)
#seagrass$C_SERRULAT <- as.factor(seagrass$C_SERRULAT)
#seagrass$H_SPINULOS <- as.factor(seagrass$H_SPINULOS)
#seagrass$T_HEMPRICH <- as.factor(seagrass$T_HEMPRICH)
head(seagrass)
summary(seagrass)
View(seagrass)
seagrass %>%
ggplot(aes(LATITUDE, LONGITUDE, fill=SPECIES)) + geom_point(pch = 21)
#h_ovalis_data %>%
#   ggplot(aes(SEDIMENT, fill=H_OVALIS)) + geom_bar(width=.5, position = "dodge")
seagrass %>%
ggplot(aes(LATITUDE, LONGITUDE, fill=SPECIES)) + geom_point()
#h_ovalis_data %>%
#   ggplot(aes(SEDIMENT, fill=H_OVALIS)) + geom_bar(width=.5, position = "dodge")
seagrass %>%
ggplot(aes(LATITUDE, LONGITUDE)) + geom_point(fill=SPECIES)
seagrass %>%
ggplot(aes(LATITUDE, LONGITUDE),fill=SPECIES) + geom_point()
#h_ovalis_data %>%
#   ggplot(aes(SEDIMENT, fill=H_OVALIS)) + geom_bar(width=.5, position = "dodge")
seagrass %>%
ggplot(aes(LATITUDE, LONGITUDE,fill=SPECIES)) + geom_point()
#h_ovalis_data %>%
#   ggplot(aes(SEDIMENT, fill=H_OVALIS)) + geom_bar(width=.5, position = "dodge")
seagrass %>%  ggplot() + geom_point(aes(x=LATITUDE, y=LONGITUDE, color=SPECIES))
#h_ovalis_data %>%
#   ggplot(aes(SEDIMENT, fill=H_OVALIS)) + geom_bar(width=.5, position = "dodge")
seagrass %>%  ggplot() + geom_point(aes(x=LATITUDE, y=LONGITUDE, color=SPECIES))
seagrass %>%
ggplot(aes(SEDIMENT, fill=SPECIES)) + geom_bar(width=.5, position = "dodge")
seagrass %>%  ggplot() + geom_point(aes(x=LATITUDE, y=LONGITUDE, color=SPECIES))
seagrass %>% ggplot() +
geom_point(aes(x=LATITUDE, y=LONGITUDE, z=DEPTH, color=SPECIES)) +
theme_void() +
axes_3D() +
stat_3D()
install.packages("gg#D")
install.packages("gg3D")
library("gg3D")
install.packages("plotly")
library(plotly)
seagrass %>%  ggplot() + geom_point(aes(x=LATITUDE, y=LONGITUDE, color=SPECIES))
seagrass %>%
ggplot(aes(SEDIMENT, fill=SPECIES)) + geom_bar(width=.5, position = "dodge")
plot_ly(x=LATITUDE, y=LONGITUDE, z=DEPTH, type="scatter3d", mode="markers", color=SPECIES)
seagrass %>%  ggplot() + geom_point(aes(x=LATITUDE, y=LONGITUDE, color=SPECIES))
seagrass %>%
ggplot(aes(SEDIMENT, fill=SPECIES)) + geom_bar(width=.5, position = "dodge")
plot_ly(data=seagrass, x=LATITUDE, y=LONGITUDE, z=DEPTH, type="scatter3d", mode="markers", color=SPECIES)
seagrass %>%  ggplot() + geom_point(aes(x=LATITUDE, y=LONGITUDE, color=SPECIES))
seagrass %>%
ggplot(aes(SEDIMENT, fill=SPECIES)) + geom_bar(width=.5, position = "dodge")
plot_ly(seagrass, x=~LATITUDE, y=~LONGITUDE, z=~DEPTH, color=~SPECIES, type="scatter3d", mode="markers")
seagrass %>%  ggplot() + geom_point(aes(x=LATITUDE, y=LONGITUDE, color=SPECIES))
seagrass %>%
ggplot(aes(SEDIMENT, fill=SPECIES)) + geom_bar(width=.5, position = "dodge")
plot_ly(seagrass, x=~LATITUDE, y=~LONGITUDE, z=~-DEPTH, color=~SPECIES, type="scatter3d", mode="markers")
typeof(seagrass$SPECIES)
class(seagrass$SPECIES)
seagrass <- read.csv("cleaned_data/seagrass_classification_data.csv", as.is =TRUE)
seagrass$SPECIES <- as.factor(seagrass$SPECIES)
seagrass$SEDIMENT <- as.factor(seagrass$SEDIMENT)
seagrass$TIDAL <- as.factor(seagrass$TIDAL)
head(seagrass)
summary(seagrass)
seagrass %>%  ggplot() + geom_point(aes(x=LATITUDE, y=LONGITUDE, color=SPECIES))
seagrass %>%
ggplot(aes(SEDIMENT, fill=SPECIES)) + geom_bar(width=.5, position = "dodge")
plot_ly(seagrass, x=~LATITUDE, y=~LONGITUDE, z=~-DEPTH, color=~SPECIES, type="scatter3d", mode="markers")
seagrass_train_ind <- createDataPartition(y = seagrass$SPECIES, p=0.75, list=FALSE)
library(tidyverse)
library(caret)
library(plotly)
library(randomForest)
rf_fit <- randomForest(SPECIES ~ LATITUDE + LONGITUDE + DEPTH + SEDIMENT + TIDAL,
data=train_set,
mtry = 5)
seagrass_train_ind <- createDataPartition(y = seagrass$SPECIES, p=0.75, list=FALSE)
train_set <- seagrass[seagrass_train_ind, ]
test_set <- seagrass[-seagrass_train_ind, ]
library(randomForest)
rf_fit <- randomForest(SPECIES ~ LATITUDE + LONGITUDE + DEPTH + SEDIMENT + TIDAL,
data=train_set,
mtry = 5)
rf_fit
library(randomForest)
rf_fit <- randomForest(SPECIES ~ LATITUDE + LONGITUDE + DEPTH + SEDIMENT + TIDAL,
data=train_set,
mtry = 3)
rf_fit
library(randomForest)
rf_fit <- randomForest(SPECIES ~ LATITUDE + LONGITUDE + DEPTH + SEDIMENT + TIDAL,
data=train_set,
mtry = 2)
rf_fit
rf_pred <- predict(rf_fit, newdata = test_set, type = "response")
confusionMatrix(table(pred = rf_pred, reference = test_set$SPECIES))
rf_pred
rf_pred$class
rf_pred[,2]
# true values
plot_ly(test_set, x=~LATITUDE, y=~LONGITUDE, z=~-DEPTH, color=~SPECIES, type="scatter3d", mode="markers")
# predicetd values
plot_ly(test_set, x=~LATITUDE, y=~LONGITUDE, z=~-DEPTH, color=~rf_pred, type="scatter3d", mode="markers")
rf_pred <- predict(rf_fit, newdata = test_set, type = "response")
confusionMatrix(table(pred = rf_pred, true = test_set$SPECIES, reference = test_set$SPECIES))
rf_pred <- predict(rf_fit, newdata = test_set, type = "response")
confusionMatrix(table(pred = rf_pred, true = test_set$SPECIES))
variable_importance <- importance(rf_fit)
tmp <- data_frame(feature = rownames(variable_importance),
Gini = variable_importance[,1]) %>%
arrange(desc(Gini))
variable_importance <- importance(rf_fit)
tmp <- data_frame(feature = rownames(variable_importance),
Gini = variable_importance[,1]) %>%
arrange(desc(Gini))
tmp
min(seagrass$LONGITUDE)
min(seagrass$LATITUDE)
max(seagrass$LATITUDE)
max(seagrass$LONGITUDE)
expand.grid(Row = -24:-10, Column = 142:153) %>%
mutate(value = variable_importance[,1]) %>%
ggplot(aes(Row, Column, fill = value)) +
geom_raster() +
scale_y_reverse()
tmp %>% filter(Gini > 200) %>%
ggplot(aes(x=reorder(feature, Gini), y=Gini)) +
geom_bar(stat='identity') +
coord_flip() + xlab("Feature") +
theme(axis.text=element_text(size=8))
tmp %>%
ggplot(aes(x=reorder(feature, Gini), y=Gini)) +
geom_bar(stat='identity') +
coord_flip() + xlab("Feature") +
theme(axis.text=element_text(size=8))
seagrass <- read.csv("cleaned_data/seagrass_classification_data.csv", as.is =TRUE)
seagrass$SPECIES <- as.factor(seagrass$SPECIES)
seagrass$SEDIMENT <- as.factor(seagrass$SEDIMENT)
seagrass$TIDAL <- as.factor(seagrass$TIDAL)
head(seagrass)
summary(seagrass)
seagrass %>%  ggplot() + geom_point(aes(x=LATITUDE, y=LONGITUDE, color=SPECIES))
seagrass %>%
ggplot(aes(SEDIMENT, fill=SPECIES)) + geom_bar(width=.5, position = "dodge")
plot_ly(seagrass, x=~LATITUDE, y=~LONGITUDE, z=~-DEPTH, color=~SPECIES, type="scatter3d", mode="markers")
library(tidyverse)
library(caret)
library(nnet)
library(plotly)
library(nnet)
multinom_fit <- multinom(SPECIES ~ LATITUDE + LONGITUDE + DEPTH + SEDIMENT + TIDAL, data=train_set)
# test-train split
seagrass_train_ind <- createDataPartition(y = seagrass$SPECIES, p=0.75, list=FALSE)
train_set <- seagrass[seagrass_train_ind, ]
test_set <- seagrass[-seagrass_train_ind, ]
library(nnet)
multinom_fit <- multinom(SPECIES ~ LATITUDE + LONGITUDE + DEPTH + SEDIMENT + TIDAL, data=train_set)
summary(multinom_fit)
exp(coef(multinom_fit))
fitted(multinom_fit)
multinom_fit$fitted.values
exp(multinom_fit$fitted.values)
multinom_fit$fitted.values[,1]
#multinom_fit$fitted.values[,1]
fitted(multinom_fit)[,1]
library(nnet)
multinom_fit <- multinom(SPECIES ~ LATITUDE + LONGITUDE + DEPTH + SEDIMENT, data=train_set)
summary(multinom_fit)
exp(coef(multinom_fit))
multinom_fit$fitted.values[,1]
fitted(multinom_fit)[,1]
multinom_fit$fitted.values[,1]
#multinom_fit$fitted.values[,1]
fitted(multinom_fit)[,1]
#multinom_fit$fitted.values[,1]
#fitted(multinom_fit)[,1]
multinom_plt <- ggplot(data=seagrass) +
geom_line(aes(x=LATITUDE, y=multinom_plt$fitted.values[,1], color="1"), size=1) +
geom_line(aes(x=LATITUDE, y=multinom_plt$fitted.values[,2], color="2"), size=1) +
geom_line(aes(x=LATITUDE, y=multinom_plt$fitted.values[,3], color="3"), size=1) +
ylab("Predicted Probability") +
xlab("Latitude")
multinom_plt
#multinom_fit$fitted.values[,1]
#fitted(multinom_fit)[,1]
plt_multinom <- ggplot(data=seagrass) +
geom_line(aes(x=LATITUDE, y=multinom_fit$fitted.values[,1], color="1"), size=1) +
geom_line(aes(x=LATITUDE, y=multinom_fit$fitted.values[,2], color="2"), size=1) +
geom_line(aes(x=LATITUDE, y=multinom_fit$fitted.values[,3], color="3"), size=1) +
ylab("Predicted Probability") +
xlab("Latitude")
plt_multinom
#multinom_fit$fitted.values[,1]
#fitted(multinom_fit)[,1]
plt_multinom <- ggplot(data=train_set) +
geom_line(aes(x=LATITUDE, y=multinom_fit$fitted.values[,1], color="1"), size=1) +
geom_line(aes(x=LATITUDE, y=multinom_fit$fitted.values[,2], color="2"), size=1) +
geom_line(aes(x=LATITUDE, y=multinom_fit$fitted.values[,3], color="3"), size=1) +
ylab("Predicted Probability") +
xlab("Latitude")
plt_multinom
p_hat <- predict(multinom_fit, newdata=test_set, type="response")
p_hat <- predict(multinom_fit, newdata=test_set, type="class")
p_hat
predicted_species <- predict(multinom_fit, newdata=test_set, type="class")
confusionMatrix(data = predicted_species, reference = test_set$SPECIES )
predicted_species
predicted_species <- predict(multinom_fit, newdata=test_set, type="response")
# predicted probabilities
predicted_prob <- predict(multinom_fit, newdata=test_set, type="probs")
# predicted classes
predicted_class <- predict(multinom_fit, newdata=test_set, type="class")
confusionMatrix(data = predicted_class, reference = test_set$SPECIES )
predicted_prob
predicted_prob[,1]
predicted_prob
plt <- ggplot(data=test_set) +
geom_line(aes(x=LONGITUDE, y=predicted_prob[,1], color="1"), size=1) +
geom_line(aes(x=LONGITUDE, y=predicted_prob[,2], color="2"), size=1) +
geom_line(aes(x=LONGITUDE, y=predicted_prob[,3], color="3"), size=1) +
ylab("Predicted Probability") +
xlab("Longitude")
plt.1
plt <- ggplot(data=test_set) +
geom_line(aes(x=LONGITUDE, y=predicted_prob[,1], color="1"), size=1) +
geom_line(aes(x=LONGITUDE, y=predicted_prob[,2], color="2"), size=1) +
geom_line(aes(x=LONGITUDE, y=predicted_prob[,3], color="3"), size=1) +
ylab("Predicted Probability") +
xlab("Longitude")
plt
predicted_prob[,1]
plt <- ggplot(data=test_set) +
geom_line(aes(x=LATITUDE, y=predicted_prob[,1], color="1"), size=1) +
geom_line(aes(x=LATITUDE, y=predicted_prob[,2], color="2"), size=1) +
geom_line(aes(x=LATITUDE, y=predicted_prob[,3], color="3"), size=1) +
ylab("Predicted Probability") +
xlab("Longitude")
plt
hist_plot <- ggplot(test_set, aes(x=LONGITUDE, fill=SPECIES)) +
geom_histogram()
hist_plot
hist_plot <- ggplot(test_set, aes(x=LONGITUDE, fill=SPECIES)) +
geom_histogram(binwidth=15)
hist_plot
hist_plot <- ggplot(test_set, aes(x=LONGITUDE, fill=SPECIES)) +
geom_histogram(binwidth=3)
hist_plot
hist_plot <- ggplot(test_set, aes(x=LONGITUDE, fill=SPECIES)) +
geom_histogram(binwidth=1)
hist_plot
hist_plot <- ggplot(test_set, aes(x=LONGITUDE, fill=SPECIES)) +
geom_histogram(binwidth=0.5)
hist_plot
hist_plot <- ggplot(test_set, aes(x=LONGITUDE, fill=SPECIES)) +
geom_histogram(binwidth=0.2)
hist_plot
hist_plot <- ggplot(test_set, aes(x=LONGITUDE, fill=SPECIES)) +
geom_density()
hist_plot
hist_plot <- ggplot(test_set, aes(x=LONGITUDE, fill=SPECIES)) +
geom_density(alpha=0.7)
hist_plot
density_plot_long_true <- ggplot(test_set, aes(x=LONGITUDE, fill=SPECIES)) +
geom_density(alpha=0.7)
density_plot_long_true
density_plot_long_pred <- ggplot(test_set, aes(x=LONGITUDE, fill=predicted_class)) +
geom_density(alpha=0.7)
density_plot_long_pred
density_plot_lat_true <- ggplot(test_set, aes(x=LATITUDE, fill=SPECIES)) +
geom_density(alpha=0.7)
density_plot_lat_true
density_plot_lat_pred <- ggplot(test_set, aes(x=LATITUDE, fill=predicted_class)) +
geom_density(alpha=0.7)
density_plot_lat_pred
density_plot_depth_true <- ggplot(test_set, aes(x=DEPTH, fill=SPECIES)) +
geom_density(alpha=0.7)
density_plot_depth_true
density_plot_depth_pred <- ggplot(test_set, aes(x=DEPTH, fill=predicted_class)) +
geom_density(alpha=0.7)
density_plot_depth_pred
library(randomForest)
rf_fit <- randomForest(SPECIES ~ LATITUDE + LONGITUDE + DEPTH + SEDIMENT + TIDAL,
data=train_set,
mtry = 2)
rf_fit
rf_pred <- predict(rf_fit, newdata = test_set, type = "response")
confusionMatrix(table(pred = rf_pred, true = test_set$SPECIES))
