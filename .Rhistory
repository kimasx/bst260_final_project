View(seagrass_data)
count_species_present <- function(C_ROTUNDAT, C_SERRULAT, S_ISOETIFO, T_HEMPRICH, Z_CAPRICOR) {
count = 0
if (C_ROTUNDAT=="Yes") {
count <- count + 1
}
if (C_SERRULAT=="Yes") {
count <- count + 1
}
if (S_ISOETIFO=="Yes") {
count <- count + 1
}
if (T_HEMPRICH=="Yes") {
count <- count + 1
}
if (Z_CAPRICOR=="Yes") {
count <- count + 1
}
}
seagrass_data$num_species_present <- mapply(count_species_present,
seagrass_data$C_ROTUNDAT,
seagrass_data$C_SERRULAT,
seagrass_data$S_ISOETIFO,
seagrass_data$T_HEMPRICH,
seagrass_data$Z_CAPRICOR)
View(seagrass_data)
seagrass_data <- read.csv("raw_data/GBR_NESP-TWQ-3.2.1-5.4_JCU_Seagrass_1984-2018_Site-surveys.csv") %>%
# filter out for rows where we have information
filter(SEDIMENT != "Not recorded" & PRESENCE_A == "Present") %>%
# delete columns we are not going to use
select(-FID, -MONTH, -YEAR,
-SURVEY_MET, -SURVEY_NAM,
-H_CAPRICOR, -H_TRICOSTA, -H_OVALIS, -H_UNINERVI, -H_DECIPIEN, -H_SPINULOS)
seagrass_data <- seagrass_data %>% select(-T_CILIATUM, -E_ACOROIDE)
seagrass_data <- seagrass_data %>%
filter(C_ROTUNDAT=="Yes" |
C_SERRULAT=="Yes" |
S_ISOETIFO=="Yes" |
T_HEMPRICH=="Yes" |
Z_CAPRICOR=="Yes")
count_species_present <- function(C_ROTUNDAT, C_SERRULAT, S_ISOETIFO, T_HEMPRICH, Z_CAPRICOR) {
count = 0
if (C_ROTUNDAT=="Yes") {
count <- count + 1
}
if (C_SERRULAT=="Yes") {
count <- count + 1
}
if (S_ISOETIFO=="Yes") {
count <- count + 1
}
if (T_HEMPRICH=="Yes") {
count <- count + 1
}
if (Z_CAPRICOR=="Yes") {
count <- count + 1
}
return(count)
}
seagrass_data$num_species_present <- mapply(count_species_present,
seagrass_data$C_ROTUNDAT,
seagrass_data$C_SERRULAT,
seagrass_data$S_ISOETIFO,
seagrass_data$T_HEMPRICH,
seagrass_data$Z_CAPRICOR)
View(seagrass_data)
table(seagrass_data$num_species_present)
nrow(seagrass_data)
table(seagrass_data$num_species_present)
nrow(seagrass_data)
seagrass_data <- seagrass_data %>% filter(num_species_present < 2)
table(seagrass_data$C_ROTUNDAT)
table(seagrass_data$C_SERRULAT)
table(seagrass_data$S_ISOETIFO)
table(seagrass_data$T_HEMPRICH)
table(seagrass_data$Z_CAPRICOR)
seagrass_data <- read.csv("raw_data/GBR_NESP-TWQ-3.2.1-5.4_JCU_Seagrass_1984-2018_Site-surveys.csv") %>%
# filter out for rows where we have information
filter(SEDIMENT != "Not recorded" & PRESENCE_A == "Present") %>%
# delete columns we are not going to use
select(-FID, -MONTH, -YEAR,
-SURVEY_MET, -SURVEY_NAM,
-H_CAPRICOR, -H_TRICOSTA, -H_OVALIS, -H_UNINERVI, -H_DECIPIEN, -H_SPINULOS)
table(seagrass_data$C_ROTUNDAT)
table(seagrass_data$C_SERRULAT)
table(seagrass_data$E_ACOROIDE)
table(seagrass_data$S_ISOETIFO)
table(seagrass_data$T_CILIATUM)
table(seagrass_data$T_HEMPRICH)
table(seagrass_data$Z_CAPRICOR)
seagrass_data <- seagrass_data %>% select(-C_ROTUNDAT, -T_CILIATUM, -E_ACOROIDE)
seagrass_data <- seagrass_data %>%
filter(C_SERRULAT=="Yes" |
S_ISOETIFO=="Yes" |
T_HEMPRICH=="Yes" |
Z_CAPRICOR=="Yes")
count_species_present <- function(C_SERRULAT, S_ISOETIFO, T_HEMPRICH, Z_CAPRICOR) {
count = 0
if (C_SERRULAT=="Yes") {
count <- count + 1
}
if (S_ISOETIFO=="Yes") {
count <- count + 1
}
if (T_HEMPRICH=="Yes") {
count <- count + 1
}
if (Z_CAPRICOR=="Yes") {
count <- count + 1
}
return(count)
}
seagrass_data$num_species_present <- mapply(count_species_present,
seagrass_data$C_SERRULAT,
seagrass_data$S_ISOETIFO,
seagrass_data$T_HEMPRICH,
seagrass_data$Z_CAPRICOR)
View(seagrass_data)
seagrass_data <- read.csv("raw_data/GBR_NESP-TWQ-3.2.1-5.4_JCU_Seagrass_1984-2018_Site-surveys.csv") %>%
# filter out for rows where we have information
filter(SEDIMENT != "Not recorded" & PRESENCE_A == "Present") %>%
# delete columns we are not going to use
select(-FID, -MONTH, -YEAR,
-SURVEY_MET, -SURVEY_NAM,
-H_CAPRICOR, -H_TRICOSTA, -H_OVALIS, -H_UNINERVI, -H_DECIPIEN, -H_SPINULOS)
seagrass_data <- seagrass_data %>% select(-C_ROTUNDAT, -T_CILIATUM, -E_ACOROIDE)
seagrass_data <- seagrass_data %>%
filter(C_SERRULAT=="Yes" |
S_ISOETIFO=="Yes" |
T_HEMPRICH=="Yes" |
Z_CAPRICOR=="Yes")
count_species_present <- function(C_SERRULAT, S_ISOETIFO, T_HEMPRICH, Z_CAPRICOR) {
count = 0
if (C_SERRULAT=="Yes") {
count <- count + 1
}
if (S_ISOETIFO=="Yes") {
count <- count + 1
}
if (T_HEMPRICH=="Yes") {
count <- count + 1
}
if (Z_CAPRICOR=="Yes") {
count <- count + 1
}
return(count)
}
seagrass_data$num_species_present <- mapply(count_species_present,
seagrass_data$C_SERRULAT,
seagrass_data$S_ISOETIFO,
seagrass_data$T_HEMPRICH,
seagrass_data$Z_CAPRICOR)
View(seagrass_data)
table(seagrass_data$num_species_present)
nrow(seagrass_data)
seagrass_data <- seagrass_data %>% filter(num_species_present < 2)
table(seagrass_data$C_SERRULAT)
table(seagrass_data$S_ISOETIFO)
table(seagrass_data$T_HEMPRICH)
table(seagrass_data$Z_CAPRICOR)
# function to make a species column
get_species_type <- function(C_SERRULAT, H_SPINULOS, T_HEMPRICH, Z_CAPIRCOR) {
if (C_SERRULAT==1) {
return("C_SERRULAT")
} else if (S_ISOETIFO=="Yes") {
return("S_ISOETIFO")
} else if (T_HEMPRICH =="Yes") {
return("T_HEMPRICH")
} else if (Z_CAPRICOR =="Yes") {
return("Z_CAPIRCOR")
}
}
# build species column to classify species of each observation based on presence/absence
seagrass_data$SPECIES <- mapply(get_species_type,
seagrass_data$C_SERRULAT,
seagrass_data$S_ISOETIFO,
seagrass_data$T_HEMPRICH,
seagrass_data$Z_CAPRICOR)
View(seagrass_data)
# function to make a species column
get_species_type <- function(C_SERRULAT, S_ISOETIFO, T_HEMPRICH, Z_CAPIRCOR) {
if (C_SERRULAT==1) {
return("C_SERRULAT")
} else if (S_ISOETIFO=="Yes") {
return("S_ISOETIFO")
} else if (T_HEMPRICH =="Yes") {
return("T_HEMPRICH")
} else if (Z_CAPRICOR =="Yes") {
return("Z_CAPIRCOR")
}
}
# build species column to classify species of each observation based on presence/absence
seagrass_data$SPECIES <- mapply(get_species_type,
seagrass_data$C_SERRULAT,
seagrass_data$S_ISOETIFO,
seagrass_data$T_HEMPRICH,
seagrass_data$Z_CAPRICOR)
# function to make a species column
get_species_type <- function(C_SERRULAT, S_ISOETIFO, T_HEMPRICH, Z_CAPRICOR) {
if (C_SERRULAT==1) {
return("C_SERRULAT")
} else if (S_ISOETIFO=="Yes") {
return("S_ISOETIFO")
} else if (T_HEMPRICH =="Yes") {
return("T_HEMPRICH")
} else if (Z_CAPRICOR =="Yes") {
return("Z_CAPIRCOR")
}
}
# build species column to classify species of each observation based on presence/absence
seagrass_data$SPECIES <- mapply(get_species_type,
seagrass_data$C_SERRULAT,
seagrass_data$S_ISOETIFO,
seagrass_data$T_HEMPRICH,
seagrass_data$Z_CAPRICOR)
View(seagrass_data)
View(seagrass_data)
# encode presence of seagrass species into zero or one
seagrass_data$C_SERRULAT <- as.factor( ifelse(seagrass_data$C_SERRULAT=="Yes", 1, 0) )
seagrass_data$H_SPINULOS <- as.factor( ifelse(seagrass_data$S_ISOETIFO=="Yes", 1, 0) )
seagrass_data$T_HEMPRICH <- as.factor( ifelse(seagrass_data$T_HEMPRICH=="Yes", 1, 0) )
seagrass_data$Z_CAPRICOR <- as.factor( ifelse(seagrass_data$Z_CAPRICOR=="Yes", 1, 0) )
# convert to unordered factor
seagrass_data$SPECIES <- factor(seagrass_data$SPECIES, ordered=FALSE)
seagrass_data <- read.csv("raw_data/GBR_NESP-TWQ-3.2.1-5.4_JCU_Seagrass_1984-2018_Site-surveys.csv") %>%
# filter out for rows where we have information
filter(SEDIMENT != "Not recorded" & PRESENCE_A == "Present") %>%
# delete columns we are not going to use
select(-FID, -MONTH, -YEAR,
-SURVEY_MET, -SURVEY_NAM,
-H_CAPRICOR, -H_TRICOSTA, -H_OVALIS, -H_UNINERVI, -H_DECIPIEN, -H_SPINULOS)
table(seagrass_data$C_ROTUNDAT)
table(seagrass_data$C_SERRULAT)
table(seagrass_data$E_ACOROIDE)
table(seagrass_data$S_ISOETIFO)
table(seagrass_data$T_CILIATUM)
table(seagrass_data$T_HEMPRICH)
table(seagrass_data$Z_CAPRICOR)
seagrass_data <- seagrass_data %>% select(-C_ROTUNDAT, -T_CILIATUM, -E_ACOROIDE)
seagrass_data <- seagrass_data %>%
filter(C_SERRULAT=="Yes" |
S_ISOETIFO=="Yes" |
T_HEMPRICH=="Yes" |
Z_CAPRICOR=="Yes")
count_species_present <- function(C_SERRULAT, S_ISOETIFO, T_HEMPRICH, Z_CAPRICOR) {
count = 0
if (C_SERRULAT=="Yes") {
count <- count + 1
}
if (S_ISOETIFO=="Yes") {
count <- count + 1
}
if (T_HEMPRICH=="Yes") {
count <- count + 1
}
if (Z_CAPRICOR=="Yes") {
count <- count + 1
}
return(count)
}
seagrass_data$num_species_present <- mapply(count_species_present,
seagrass_data$C_SERRULAT,
seagrass_data$S_ISOETIFO,
seagrass_data$T_HEMPRICH,
seagrass_data$Z_CAPRICOR)
table(seagrass_data$num_species_present)
nrow(seagrass_data)
seagrass_data <- seagrass_data %>% filter(num_species_present < 2)
table(seagrass_data$C_SERRULAT)
table(seagrass_data$S_ISOETIFO)
table(seagrass_data$T_HEMPRICH)
table(seagrass_data$Z_CAPRICOR)
# function to make a species column
get_species_type <- function(C_SERRULAT, S_ISOETIFO, T_HEMPRICH, Z_CAPRICOR) {
if (C_SERRULAT==1) {
return("C_SERRULAT")
} else if (S_ISOETIFO=="Yes") {
return("S_ISOETIFO")
} else if (T_HEMPRICH =="Yes") {
return("T_HEMPRICH")
} else if (Z_CAPRICOR =="Yes") {
return("Z_CAPIRCOR")
}
}
# build species column to classify species of each observation based on presence/absence
seagrass_data$SPECIES <- mapply(get_species_type,
seagrass_data$C_SERRULAT,
seagrass_data$S_ISOETIFO,
seagrass_data$T_HEMPRICH,
seagrass_data$Z_CAPRICOR)
# encode presence of seagrass species into zero or one
seagrass_data$C_SERRULAT <- as.factor( ifelse(seagrass_data$C_SERRULAT=="Yes", 1, 0) )
seagrass_data$H_SPINULOS <- as.factor( ifelse(seagrass_data$S_ISOETIFO=="Yes", 1, 0) )
seagrass_data$T_HEMPRICH <- as.factor( ifelse(seagrass_data$T_HEMPRICH=="Yes", 1, 0) )
seagrass_data$Z_CAPRICOR <- as.factor( ifelse(seagrass_data$Z_CAPRICOR=="Yes", 1, 0) )
# convert to unordered factor
seagrass_data$SPECIES <- factor(seagrass_data$SPECIES, ordered=FALSE)
# encode presence of seagrass species into zero or one
seagrass_data$C_SERRULAT <- as.factor( ifelse(seagrass_data$C_SERRULAT=="Yes", 1, 0) )
seagrass_data$H_SPINULOS <- as.factor( ifelse(seagrass_data$S_ISOETIFO=="Yes", 1, 0) )
seagrass_data$T_HEMPRICH <- as.factor( ifelse(seagrass_data$T_HEMPRICH=="Yes", 1, 0) )
seagrass_data$Z_CAPRICOR <- as.factor( ifelse(seagrass_data$Z_CAPRICOR=="Yes", 1, 0) )
# convert to unordered factor
seagrass_data$SPECIES <- as.factor(seagrass_data$SPECIES, ordered=FALSE)
# function to make a species column
get_species_type <- function(C_SERRULAT, S_ISOETIFO, T_HEMPRICH, Z_CAPRICOR) {
if (C_SERRULAT==1) {
return("C_SERRULAT")
} else if (S_ISOETIFO=="Yes") {
return("S_ISOETIFO")
} else if (T_HEMPRICH =="Yes") {
return("T_HEMPRICH")
} else if (Z_CAPRICOR =="Yes") {
return("Z_CAPIRCOR")
}
}
# build species column to classify species of each observation based on presence/absence
seagrass_data$SPECIES <- mapply(get_species_type,
seagrass_data$C_SERRULAT,
seagrass_data$S_ISOETIFO,
seagrass_data$T_HEMPRICH,
seagrass_data$Z_CAPRICOR)
View(seagrass_data)
seagrass_data <- read.csv("raw_data/GBR_NESP-TWQ-3.2.1-5.4_JCU_Seagrass_1984-2018_Site-surveys.csv") %>%
# filter out for rows where we have information
filter(SEDIMENT != "Not recorded" & PRESENCE_A == "Present") %>%
# delete columns we are not going to use
select(-FID, -MONTH, -YEAR,
-SURVEY_MET, -SURVEY_NAM,
-H_CAPRICOR, -H_TRICOSTA, -H_OVALIS, -H_UNINERVI, -H_DECIPIEN, -H_SPINULOS)
seagrass_data <- seagrass_data %>% select(-C_ROTUNDAT, -T_CILIATUM, -E_ACOROIDE)
seagrass_data <- seagrass_data %>%
filter(C_SERRULAT=="Yes" |
S_ISOETIFO=="Yes" |
T_HEMPRICH=="Yes" |
Z_CAPRICOR=="Yes")
count_species_present <- function(C_SERRULAT, S_ISOETIFO, T_HEMPRICH, Z_CAPRICOR) {
count = 0
if (C_SERRULAT=="Yes") {
count <- count + 1
}
if (S_ISOETIFO=="Yes") {
count <- count + 1
}
if (T_HEMPRICH=="Yes") {
count <- count + 1
}
if (Z_CAPRICOR=="Yes") {
count <- count + 1
}
return(count)
}
seagrass_data$num_species_present <- mapply(count_species_present,
seagrass_data$C_SERRULAT,
seagrass_data$S_ISOETIFO,
seagrass_data$T_HEMPRICH,
seagrass_data$Z_CAPRICOR)
table(seagrass_data$num_species_present)
nrow(seagrass_data)
seagrass_data <- seagrass_data %>% filter(num_species_present < 2)
table(seagrass_data$C_SERRULAT)
table(seagrass_data$S_ISOETIFO)
table(seagrass_data$T_HEMPRICH)
table(seagrass_data$Z_CAPRICOR)
# function to make a species column
get_species_type <- function(C_SERRULAT, S_ISOETIFO, T_HEMPRICH, Z_CAPRICOR) {
if (C_SERRULAT=="Yes") {
return("C_SERRULAT")
} else if (S_ISOETIFO=="Yes") {
return("S_ISOETIFO")
} else if (T_HEMPRICH =="Yes") {
return("T_HEMPRICH")
} else if (Z_CAPRICOR =="Yes") {
return("Z_CAPIRCOR")
}
}
# build species column to classify species of each observation based on presence/absence
seagrass_data$SPECIES <- mapply(get_species_type,
seagrass_data$C_SERRULAT,
seagrass_data$S_ISOETIFO,
seagrass_data$T_HEMPRICH,
seagrass_data$Z_CAPRICOR)
View(seagrass_data)
table(seagrass_data$SPECIES)
# convert SPECIES to unordered factor
seagrass_data$SPECIES <- as.factor(seagrass_data$SPECIES, ordered=FALSE)
# convert SPECIES to unordered factor
seagrass_data$SPECIES <- factor(seagrass_data$SPECIES, ordered=FALSE)
# rename misspelled column in original data set
names(seagrass_data)[names(seagrass_data) == "LATITUTDE"] <- "LATITUDE"
# only select columns relevant for our ML algorithm
seagrass_data <- seagrass_data %>%
select(SPECIES, LATITUDE, LONGITUDE, DEPTH, SEDIMENT, TIDAL)
View(seagrass_data)
write.csv(seagrass_data, "cleaned_data/seagrass_classification_data.csv", row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
temp <- read_csv("cleaned_data/aims_temperatures.csv")
coral_cover <- read_csv("cleaned_data/coral_cover.csv")
temp_coral_cover <- merge(x=temp, y=coral_cover, by="date")
View(temp_coral_cover)
temp_coral_cover %>%
ggplot(aes(avg_water_temp_2.0m_flat_site, mean_live_coral_cover_percent)) +
geom_point()
temp_coral_cover %>%
ggplot(aes(avg_water_temp_9.0m_slope_site, mean_live_coral_cover_percent)) +
geom_point()
fish <- read_csv("cleaned_data/fish_species_counts.csv")
fish_temp <- merge(x=temp, y=fish, by="date")
# water temp at 2.0m
fish_temp %>% ggplot(aes(avg_water_temp_2.0m_flat_site, num_of_species)) + geom_point()
# water temp at92.0m
fish_temp %>% ggplot(aes(avg_water_temp_9.0m_slope_site, num_of_species)) + geom_point()
train_index <- createDataPartition(y=fish_temp$num_of_species, times=1, p = 0.6, list=FALSE)
library(tidyverse)
library(caret)
library(nnet)
library(plotly)
train_index <- createDataPartition(y=fish_temp$num_of_species, times=1, p = 0.6, list=FALSE)
train_set <- fish_temp[train_index, ]
test_set <- fish_temp[-train_index, ]
fish_temp_2.0m <- lm(num_of_species ~ avg_water_temp_2.0m_flat_site, data=train_set)
summary(fish_temp_2.0m)
fish_temp_9.0m <- lm(num_of_species ~ avg_water_temp_9.0m_slope_site, data=train_set)
summary(fish_temp_9.0m)
fish_temp <- lm(num_of_species ~ avg_water_temp_2.0m_flat_site + avg_water_temp_9.0m_slope_site, data=train_set)
summary(fish_temp)
pred_2.0m <- predict(fish_temp_2.0m, test_set)
pred_9.0m <- predict(fish_temp_9.0m, test_set)
postResample(pred = pred_2.0m, obs = test_set$num_of_species)
postResample(pred = pred_9.0m, obs = test_set$num_of_species)
# water temp at 2.0m
test_set %>%
ggplot(aes(avg_water_temp_2.0m_flat_site, num_of_species)) +
geom_point() +
geom_abline(intercept=fish_temp_2.0m$coefficients[1], slope=fish_temp_2.0m$coefficients[2], col="red")
# water temp at 9.0m
test_set %>%
ggplot(aes(avg_water_temp_9.0m_slope_site, num_of_species)) +
geom_point() +
geom_abline(intercept=fish_temp_9.0m$coefficients[1], slope=fish_temp_9.0m$coefficients[2], col="blue")
seagrass <- read.csv("cleaned_data/seagrass_classification_data.csv", as.is =TRUE)
seagrass$SPECIES <- as.factor(seagrass$SPECIES)
seagrass$SEDIMENT <- as.factor(seagrass$SEDIMENT)
seagrass$TIDAL <- as.factor(seagrass$TIDAL)
head(seagrass)
summary(seagrass)
seagrass %>%  ggplot() + geom_point(aes(x=LATITUDE, y=LONGITUDE, color=SPECIES))
seagrass %>%
ggplot(aes(SEDIMENT, fill=SPECIES)) + geom_bar(width=.5, position = "dodge")
plot_ly(seagrass, x=~LATITUDE, y=~LONGITUDE, z=~-DEPTH, color=~SPECIES, type="scatter3d", mode="markers")
# test-train split
seagrass_train_ind <- createDataPartition(y = seagrass$SPECIES, p=0.75, list=FALSE)
train_set <- seagrass[seagrass_train_ind, ]
test_set <- seagrass[-seagrass_train_ind, ]
library(randomForest)
rf_fit <- randomForest(SPECIES ~ LATITUDE + LONGITUDE + DEPTH + SEDIMENT + TIDAL,
data=train_set,
mtry = 2)
rf_fit
rf_pred <- predict(rf_fit, newdata = test_set, type = "response")
confusionMatrix(table(pred = rf_pred, true = test_set$SPECIES))
# true values
plot_ly(test_set, x=~LATITUDE, y=~LONGITUDE, z=~-DEPTH, color=~SPECIES, type="scatter3d", mode="markers")
# predicetd values
plot_ly(test_set, x=~LATITUDE, y=~LONGITUDE, z=~-DEPTH, color=~rf_pred, type="scatter3d", mode="markers")
variable_importance <- importance(rf_fit)
tmp <- data_frame(feature = rownames(variable_importance),
Gini = variable_importance[,1]) %>%
arrange(desc(Gini))
tmp
tmp %>% ggplot(aes(x=reorder(feature, Gini), y=Gini)) +
geom_bar(stat='identity') +
coord_flip() + xlab("Feature") +
theme(axis.text=element_text(size=8))
# test-train split
seagrass_train_ind <- createDataPartition(y = seagrass$SPECIES, p=0.75, list=FALSE)
train_set <- seagrass[seagrass_train_ind, ]
test_set <- seagrass[-seagrass_train_ind, ]
library(nnet)
multinom_fit <- multinom(SPECIES ~ LATITUDE + LONGITUDE + DEPTH + SEDIMENT, data=train_set)
summary(multinom_fit)
exp(coef(multinom_fit))
# predicted probabilities
predicted_prob <- predict(multinom_fit, newdata=test_set, type="probs")
# predicted classes
predicted_class <- predict(multinom_fit, newdata=test_set, type="class")
confusionMatrix(data = predicted_class, reference = test_set$SPECIES )
density_plot_long_true <- ggplot(test_set, aes(x=LONGITUDE, fill=SPECIES)) +
geom_density(alpha=0.7)
density_plot_long_true
density_plot_long_pred <- ggplot(test_set, aes(x=LONGITUDE, fill=predicted_class)) +
geom_density(alpha=0.7)
density_plot_long_pred
density_plot_lat_true <- ggplot(test_set, aes(x=LATITUDE, fill=SPECIES)) +
geom_density(alpha=0.7)
density_plot_lat_true
density_plot_lat_pred <- ggplot(test_set, aes(x=LATITUDE, fill=predicted_class)) +
geom_density(alpha=0.7)
density_plot_lat_pred
density_plot_depth_true <- ggplot(test_set, aes(x=DEPTH, fill=SPECIES)) +
geom_density(alpha=0.7)
density_plot_depth_true
density_plot_depth_pred <- ggplot(test_set, aes(x=DEPTH, fill=predicted_class)) +
geom_density(alpha=0.7)
density_plot_depth_pred
View(train_set)
library(randomForest)
rf_fit <- randomForest(SPECIES ~ LATITUDE + LONGITUDE + DEPTH + SEDIMENT + TIDAL,
data=train_set,
mtry = 2)
rf_fit
View(train_set)
